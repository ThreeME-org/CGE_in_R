---
title: "Basic Macroeconomic Results"
format: 
  html:
    center: true
    

params:
  project_name: "threeme"
  startyear: 2020
  endyear: 2100
  shockyear: 2021
  scenarios: NULL  # List of scenarii to be plotted
  gdp_var: NULL
  
echo: false
---


```{r}
#| echo: false
#| include: false
#| label: setup



knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  results = "hide"
)


source("src/setup.R")
options(ofce.base_family = "Arial")


project_name <- params$project_name


data_full <- readRDS(file.path("data","output",paste0(project_name,".rds")))


distinct_pal <- c("#CD5C5C", "#E9967A", "#FFEC9E", "#9BCD9B", "#87CEFA", "#CD96CD", "#FFB6C1", "#8B7355")
gradient_pal <- c( "#5D478B","#27408B", "#1C86EE", "#20B2AA", "#2E8B57", "#00688B" , "#6E7B8B") 

var_pal =c(GDP = "#2B2D2DFF",Y = "#2B2D2DFF",CH="#E9967A",M="#CD5C5C",I = "#FFEC8B",G="#9BCD9B",X="#87CEFA")

```


```{r}
#| label: various checks

available_vars <- data_full$variable |> unique()

if(is.null(params$gdp_var)){
  GDP_var <- intersect(c("GDP","Y"),available_vars)[1]
}else{
  GDP_var <- intersect(c(params$gdp_var,"GDP","Y"),available_vars)[1]
}




if(is.null(params$scenarios)){
  
  scenarios <- data_full$scenario |> unique()
  }else{
    
  av_scenarios <- setdiff(data_full$scenario |> unique(),"baseline") 
  check <- intersect(params$scenarios, av_scenarios)
  

  if(length(check) == 0){  scenarios <- data_full$scenario |> unique()
  }else{
    
      scenarios <- c("baseline",intersect(c(params$scenarios ) |> unique(),av_scenarios ))
  }
  
  }

scenarios<- scenarios |> purrr::set_names()
scen <- setdiff(scenarios,"baseline")   |> purrr::set_names()

scen_pal <- purrr::set_names(c("thistle",gradient_pal[1:length(scen)]) , c("baseline", scen))

startyear <- max(params$startyear, min(data_full$year, na.rm = TRUE))
endyear <- min(params$endyear, max(data_full$year, na.rm = TRUE))
shockyear <- max(params$shockyear, min(data_full$year, na.rm = TRUE))

n_years <- endyear - startyear +1
    algo_x_breaks <- 10
    if (n_years <= 35) {
      algo_x_breaks <- 5
    }
    if (n_years <= 20) {
      algo_x_breaks <- 2
    }
    if (n_years <= 10) {
      algo_x_breaks <- 1
    }
    break_x_sequence <- seq(from = startyear, to = endyear, 
                            by = algo_x_breaks)
```

`r if(length(GDP_var) == 0 ){"Couldn't find any GDP variable"}`
`r if(length(GDP_var) == 0 ){knit_exit()}`




```{r}
#| label: some_info

labels <- purrr::set_names(
 x= c(GDP_var,"I","CH","G"),
  nm=c("GDP", "Total investment","Households consumption", "Public spending")
  
)
  


```


# GDP evolution

```{r}
#| label: fig-gdprel
#| fig-cap: "GDP relative to the baseline scenario"

graph_gdp_rel <- data_full |> filter(variable == GDP_var) |> 
  mutate(reldiff =  (values/values_ref) - 1)|> 
  ggplot(aes(x = year, y = reldiff ))+
  geom_line(aes(colour = scenario))+
  scale_x_continuous(breaks = break_x_sequence)  + 
  scale_color_manual(values = scen_pal) + 
    labs(x = NULL,  y = NULL) + 
    
    ofce::theme_ofce(base_family = "")+ 
    theme(
          axis.title.y = element_blank(), 
          axis.ticks = element_line(linewidth  = 0.5,   colour = "grey42"), 
          legend.position = "bottom",
          legend.title = element_blank())+ 
  scale_y_continuous(labels = scales::percent_format(accuracy = 0.25, 
                                                       suffix = "%"))
  
  

graph_gdp_rel

```


```{r}
#| label: fig-gdplevel
#| fig-cap: "GDP level per scenario"

graph_gdp_level <- data_full |> filter(variable == GDP_var) |> 
  ggplot(aes(x = year, y = values) )+
  geom_line(aes(colour = scenario))+
  scale_x_continuous(breaks = break_x_sequence) + 
  
    scale_color_manual(values = scen_pal) + 
    labs(x = NULL,  y = NULL) + 
    
    ofce::theme_ofce(base_family = "")+ 
    theme(
          axis.title.y = element_blank(), 
          axis.ticks = element_line(linewidth  = 0.5,   colour = "grey42"), 
          legend.position = "bottom",
          legend.title = element_blank())
  
  


graph_gdp_level  
  
```

# GDP components


## Domestic components


```{r}
#| label: fig-domestic
#| fig-cap: GDP domestic components in relative difference from the baseline


vars_dom <- intersect(c("I","CH","G"), available_vars)

 if( length(vars_dom) == 0 ){
   graph_domestic <- NULL

 }else{
   graph_domestic <-  imap(scen,
                           ~simple_plot(data_full |> filter(scenario == .x), 
                                        c(GDP_var,vars_dom) ,
                                        startyear = startyear, endyear = endyear , titleplot = .y, decimal = 0.01)+ 
                             scale_linetype(guide = 'none')+
                             scale_color_manual(values = var_pal, breaks = c(GDP_var,vars_dom))+
                             theme(legend.title = element_blank(),
                                   legend.position = "bottom")
   )

   if(length(graph_domestic)==1){
     graph_domestic[[1]]
   }else{
       ggarrange(plotlist = graph_domestic,ncol = 1,common.legend = TRUE)}
 }

```

## Foreign trade

```{r}
#| label: fig-comext

vars_comext <- intersect(c("X","M") , available_vars)

 if( length(vars_comext) == 0 ){
   graph_comext <- NULL
   

 }else{
   graph_comext <- TRUE
   
      graph_comext <-  imap(scen,~simple_plot(data_full |> filter(scenario == .x), c(vars_comext) ,startyear = startyear, endyear = endyear , titleplot = .y, decimal = 0.01)+ scale_linetype(guide = 'none')+
     scale_color_manual(values = var_pal)+
     theme(legend.title = element_blank(),
           legend.position = "bottom")
   )

   ggarrange(plotlist = graph_comext,ncol = 1,common.legend = TRUE)
   
 }

```

`r if(is.null(graph_comext)){ "\nThis graph cannot be made for this model, as both foreign trade components X and M are not in this model.\n"}`

# Summary 

## Contributions to relative change in GDP from the baseline

```{r}
#| label: calcs_contrib
#| include: false

contrib_comp <- c(vars_dom,vars_comext)
contrib_comp_label <- contrib_comp


data_contrib <-  map(scen,~contrib_calc(data_full,GDP_var, contrib_comp, scenar = c("baseline",.x), neg.value = intersect(vars_comext,"M"))) |> set_names(scen)

graph_contrib_gdp <- data_contrib |> imap(
~contrib.plot(.x, series = contrib_comp,label_series = contrib_comp_label,
             startyear = startyear, titleplot = NULL, line_tot = TRUE,
             template = "ofce",
             decimal = 0.01
             ) + 
  scale_fill_manual(values = desaturate(var_pal,0.1))+
     theme(legend.title = element_blank(),
           legend.position = "bottom")

)
graph_contrib_gdp

```

::: panel-tabset

```{r }
#| echo: false
#| label: contribs
#| results: asis
#| output: asis



for (i in scen) {
  
 cat(paste0("### ",i," {.tabset}\n"))
  
 print(graph_contrib_gdp[[i]] + 
         theme(legend.position = "bottom" ) 
       )
 
 cat("\n\n")
 
}

```

:::






## Summary tables : observed growth rates


```{r}
#| include: false


tables_refs <- purrr::set_names(scenarios) |>
  
  map(~table_reference(data_full,ref_name = .x , 
                       growth_var = c(GDP_var,vars_dom,vars_comext),shock_year = shockyear ) 
      )

table_format_gt <- function(gt){
  gt |> 
  cols_label(Variable = "") |> 
  cols_align("center")|>
  cols_align("right", columns = 1)|>
  opt_horizontal_padding(scale = 1.75)
 
}

```


::: panel-tabset

```{r}
#| include: true
#| results: asis
#| output: asis


for (i in scenarios) {
  
 cat(paste0("### Scenario ",i," {.tabset} \n"))
  
print(tables_refs[[i]] |> gt() |> table_format_gt())
 cat("\n\n")
 
}


```

:::


## Summary tables: in difference from the baseline

```{r}
#| include: false


tables_macros <- purrr::set_names(scen) |>
  
  map(~table_macro(data_full,shock = .x , 
                       relative_variation = c(GDP_var,vars_dom,vars_comext),shock_year = shockyear ) 
      )



```

::: panel-tabset

```{r}
#| include: true
#| results: asis
#| output: asis


for (i in scen) {
  
 cat(paste0("### Scenario ",i," {.tabset} \n"))
  
print(tables_macros[[i]] |> gt() |> table_format_gt())
 cat("\n\n")
 
}


```

:::

